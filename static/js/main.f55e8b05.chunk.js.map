{"version":3,"sources":["components/Person/Person.jsx","types.js","components/PeopleList/PeopleList.jsx","App.jsx","api/request.jsx","index.js"],"names":["Person","PropTypes","shape","name","string","isRequired","height","mass","hair_color","skin_color","eye_color","birth_year","gender","homeworld","films","array","species","vehicles","starships","created","edited","url","person","useState","newComment","setNewComment","commentsList","setCommentsList","useEffect","commentsFromStorage","JSON","parse","localStorage","getItem","stringify","className","style","width","onSubmit","event","preventDefault","comment","id","uuidv4","body","addComment","htmlFor","rows","value","onChange","target","type","textAlign","length","map","key","PeopleList","people","App","setPeople","pageCount","setPageCount","loadMoreButton","setLoadMoreButton","showLoader","setShowLoader","getPeople","a","pageNumber","fetch","then","response","json","data","concat","results","next","color","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f55e8b05.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './Person.scss';\nimport { PersonType } from '../../types';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nexport const Person = ({ person }) => {\n  const [newComment, setNewComment] = useState('');\n  const [commentsList, setCommentsList] = useState([]);\n\n  const addComment = () => {\n    const comment = {\n      id: uuidv4(),\n      body: newComment,\n    };\n\n    setNewComment('');\n\n    setCommentsList([comment, ...commentsList]);\n  };\n\n  useEffect(() => {\n    const commentsFromStorage = JSON.parse(localStorage.getItem(person.name));\n\n    if (commentsFromStorage) {\n      setCommentsList(commentsFromStorage);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage[person.name] = JSON.stringify(commentsList);\n  }, [commentsList]);\n\n  return (\n    <div className=\"card\" style={{ width: `${18}rem` }}>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">\n          {person.name}\n        </h5>\n        <h6 className=\"card-subtitle mb-2 text-muted\">\n          {`Birth year: ${person.birth_year}`}\n        </h6>\n      </div>\n\n      <form\n        className=\"new-comment-form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          addComment();\n        }}\n      >\n        <div className=\"form-group\">\n          <label htmlFor=\"inputComment\">New comment:</label>\n          <textarea\n            className=\"form-control\"\n            rows=\"3\"\n            id=\"inputComment\"\n            value={newComment}\n            onChange={event => setNewComment(event.target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Add comment</button>\n      </form>\n\n      <h6\n        className=\"card-subtitle text-muted\"\n        style={{ textAlign: 'center' }}\n      >\n        {`All comments: ${commentsList.length}`}\n      </h6>\n      <ul className=\"list-group list-group-flush\">\n        {commentsList.length > 0\n          ? (\n            <>\n              {commentsList.map(comment => (\n                <li\n                  key={comment.id}\n                  className=\"list-group-item\"\n                >\n                  {comment.body}\n                </li>\n              ))}\n            </>\n          ) : (\n            <li className=\"list-group-item\">\n              No comments\n            </li>\n          )}\n      </ul>\n    </div>\n  );\n};\n\nPerson.propTypes = {\n  person: PersonType.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const PersonType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  mass: PropTypes.string.isRequired,\n  hair_color: PropTypes.string.isRequired,\n  skin_color: PropTypes.string.isRequired,\n  eye_color: PropTypes.string.isRequired,\n  birth_year: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  homeworld: PropTypes.string.isRequired,\n  films: PropTypes.array.isRequired,\n  species: PropTypes.array.isRequired,\n  vehicles: PropTypes.array.isRequired,\n  starships: PropTypes.array.isRequired,\n  created: PropTypes.string.isRequired,\n  edited: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n});\n","import React from 'react';\nimport './PeopleList.scss';\nimport PropTypes from 'prop-types';\nimport { Person } from '../Person';\nimport { PersonType } from '../../types';\n\nexport const PeopleList = ({\n  people,\n}) => (\n  <ul className=\"peopleList\">\n    {people.map(person => (\n      <li\n        key={person.name}\n        className=\"person\"\n      >\n        <Person\n          person={person}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nPeopleList.propTypes = {\n  people: PropTypes.arrayOf(PersonType).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { request } from './api/request';\nimport './App.scss';\nimport { PeopleList } from './components/PeopleList';\n\nconst App = () => {\n  const [people, setPeople] = useState([]);\n  const [pageCount, setPageCount] = useState(1);\n  const [loadMoreButton, setLoadMoreButton] = useState(true);\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    getPeople();\n  }, [pageCount]);\n\n  const getPeople = async() => {\n    setShowLoader(true);\n\n    const data = await request(pageCount);\n\n    setShowLoader(false);\n\n    setPeople(people.concat(data.results));\n\n    if (!data.next) {\n      setLoadMoreButton(false);\n    }\n  };\n\n  return (\n    <main className=\"App\">\n      <h1>\n        List of people\n      </h1>\n\n      <PeopleList\n        people={people}\n      />\n\n      {showLoader\n        && (\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n        />\n        )\n      }\n\n      {loadMoreButton\n        && (\n        <button\n          type=\"button\"\n          className=\"load-more-button\"\n          onClick={() => setPageCount(pageCount + 1)}\n        >\n          Load more\n        </button>\n        )\n      }\n    </main>\n  );\n};\n\nexport default App;\n","const BASE_URL = 'https://swapi.dev/api/people';\n\nexport const request = pageNumber => (\n  fetch(`${BASE_URL}/?page=${pageNumber}`)\n    .then(response => response.json())\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}