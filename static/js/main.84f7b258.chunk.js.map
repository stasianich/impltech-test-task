{"version":3,"sources":["components/Person/Person.jsx","types.js","components/PeopleList/PeopleList.jsx","App.jsx","api/request.jsx","index.js"],"names":["Person","PropTypes","shape","name","string","isRequired","height","mass","hair_color","skin_color","eye_color","birth_year","gender","homeworld","films","array","species","vehicles","starships","created","edited","url","person","useState","newComment","setNewComment","commentsList","setCommentsList","useEffect","commentsFromStorage","JSON","parse","localStorage","getItem","stringify","className","onSubmit","event","preventDefault","comment","id","uuidv4","body","addComment","value","onChange","target","type","classNames","disabled","length","map","key","PeopleList","people","App","setPeople","pageCount","setPageCount","loadMoreButton","setLoadMoreButton","showLoader","setShowLoader","getPeople","a","pageNumber","fetch","then","response","json","data","concat","results","next","color","width","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84f7b258.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './Person.scss';\nimport classNames from 'classnames';\nimport { PersonType } from '../../types';\n\nexport const Person = ({ person }) => {\n  const [newComment, setNewComment] = useState('');\n  const [commentsList, setCommentsList] = useState([]);\n\n  const addComment = () => {\n    const comment = {\n      id: uuidv4(),\n      body: newComment,\n    };\n\n    setNewComment('');\n\n    setCommentsList([comment, ...commentsList]);\n  };\n\n  useEffect(() => {\n    const commentsFromStorage = JSON.parse(localStorage.getItem(person.name));\n\n    if (commentsFromStorage) {\n      setCommentsList(commentsFromStorage);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage[person.name] = JSON.stringify(commentsList);\n  }, [commentsList]);\n\n  return (\n    <article className=\"person-card\">\n      <h2 className=\"person-card__name\">\n        {person.name}\n      </h2>\n\n      <h4 className=\"person-card__birth-year\">\n        {`Birth year: ${person.birth_year}`}\n      </h4>\n\n      <hr className=\"person-card__line\" />\n\n      <form\n        className=\"add-comment-form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          addComment();\n        }}\n      >\n        <textarea\n          className=\"add-comment-form__body\"\n          value={newComment}\n          onChange={event => setNewComment(event.target.value)}\n        />\n        <button\n          type=\"submit\"\n          className={\n            classNames(\n              'add-comment-form__submit-button', {\n                'submit-button--enabled': newComment,\n              },\n            )\n          }\n          disabled={!newComment}\n        >\n          Add comment\n        </button>\n      </form>\n\n      <hr className=\"person-card__line\" />\n\n      <div className=\"person-card__comments comments\">\n        <h5 className=\"comments__title\">\n          COMMENTS:\n        </h5>\n\n        {commentsList.length > 0\n          ? (\n            <ol\n              className=\"comments__comments-list\"\n            >\n              {commentsList.map(comment => (\n                <li\n                  className=\"comment\"\n                  key={comment.id}\n                >\n                  {comment.body}\n                </li>\n              ))}\n            </ol>\n          )\n          : (\n            <span>\n              No comments\n            </span>\n          )\n        }\n      </div>\n    </article>\n  );\n};\n\nPerson.propTypes = {\n  person: PersonType.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const PersonType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  mass: PropTypes.string.isRequired,\n  hair_color: PropTypes.string.isRequired,\n  skin_color: PropTypes.string.isRequired,\n  eye_color: PropTypes.string.isRequired,\n  birth_year: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  homeworld: PropTypes.string.isRequired,\n  films: PropTypes.array.isRequired,\n  species: PropTypes.array.isRequired,\n  vehicles: PropTypes.array.isRequired,\n  starships: PropTypes.array.isRequired,\n  created: PropTypes.string.isRequired,\n  edited: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n});\n","import React from 'react';\nimport './PeopleList.scss';\nimport PropTypes from 'prop-types';\nimport { Person } from '../Person';\nimport { PersonType } from '../../types';\n\nexport const PeopleList = ({\n  people,\n}) => (\n  <ul className=\"peopleList\">\n    {people.map(person => (\n      <li\n        key={person.name}\n        className=\"person\"\n      >\n        <Person\n          person={person}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nPeopleList.propTypes = {\n  people: PropTypes.arrayOf(PersonType).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { request } from './api/request';\nimport './App.scss';\nimport { PeopleList } from './components/PeopleList';\n\nconst App = () => {\n  const [people, setPeople] = useState([]);\n  const [pageCount, setPageCount] = useState(1);\n  const [loadMoreButton, setLoadMoreButton] = useState(true);\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    getPeople();\n  }, [pageCount]);\n\n  const getPeople = async() => {\n    setShowLoader(true);\n\n    const data = await request(pageCount);\n\n    setShowLoader(false);\n\n    setPeople(people.concat(data.results));\n\n    if (!data.next) {\n      setLoadMoreButton(false);\n    }\n  };\n\n  return (\n    <main className=\"App\">\n      <h1>\n        List of people\n      </h1>\n\n      <PeopleList\n        people={people}\n      />\n\n      {showLoader\n        && (\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n        />\n        )\n      }\n\n      {loadMoreButton\n        && (\n        <button\n          type=\"button\"\n          className=\"load-more-button\"\n          onClick={() => setPageCount(pageCount + 1)}\n        >\n          Load more\n        </button>\n        )\n      }\n    </main>\n  );\n};\n\nexport default App;\n","const BASE_URL = 'https://swapi.dev/api/people';\n\nexport const request = pageNumber => (\n  fetch(`${BASE_URL}/?page=${pageNumber}`)\n    .then(response => response.json())\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}